package com.testapp.crm.repository;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;

import com.testapp.crm.model.Contact;

@Repository
public class ContactRepository {
	@Autowired
	JdbcTemplate jdbcTemplate;

	public List<Contact> getContacts() {
		return jdbcTemplate.query("select * from contact", new ContactRowMapper());
	}

	public Contact findById(long id) {
		return jdbcTemplate.queryForObject("select * from Contact where id=?", new Object[] { id },
				new ContactRowMapper());
	}

	public int deleteById(long id) {
		return jdbcTemplate.update("delete from Contact where id=?", new Object[] { id });
	}

	public int insert(Contact Contact) {
		return jdbcTemplate.update(
				"insert into Contact (firstName, lastName, emailAddress, telephoneNumber, address1, address2, city, postCode) "
						+ "values(?, ?, ?, ?, ?, ?, ?, ?)",
				new Object[] { Contact.getFirstName(), Contact.getLastName(),
						Contact.getEmailAddress(), Contact.getTelephoneNumber(), Contact.getAddress1(),
						Contact.getAddress2(), Contact.getCity(), Contact.getPostCode() });
	}

	public int update(Contact Contact) {
		return jdbcTemplate.update("update Contact "
				+ " set first_name = ?, last_name = ?, email_address = ?,  telephone_number = ?, address1 = ?, address2 = ?, city = ?, post_code = ? "
				+ " where id = ?",
				new Object[] { Contact.getId(), Contact.getFirstName(), Contact.getLastName(),
						Contact.getEmailAddress(), Contact.getTelephoneNumber(), Contact.getAddress1(),
						Contact.getAddress2(), Contact.getCity(), Contact.getPostCode() });
	}
}

class ContactRowMapper implements RowMapper<Contact> {
	@Override
	public Contact mapRow(ResultSet rs, int rowNum) throws SQLException {
		Contact contact = new Contact();
		contact.setId(rs.getLong("id"));
		contact.setFirstName(rs.getString("firstName"));
		contact.setLastName(rs.getString("lastName"));
		contact.setEmailAddress(rs.getString("emailAddress"));
		contact.setTelephoneNumber(rs.getString("telephoneNumber"));
		contact.setAddress1(rs.getString("address1"));
		contact.setAddress2(rs.getString("address2"));
		contact.setCity(rs.getString("city"));
		contact.setPostCode(rs.getString("postCode"));
		return contact;
	}

}